{"ast":null,"code":"import _classCallCheck from \"/Users/carlmatheson/Desktop/React-Api-Reckon/react-api-reckon/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carlmatheson/Desktop/React-Api-Reckon/react-api-reckon/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/carlmatheson/Desktop/React-Api-Reckon/react-api-reckon/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carlmatheson/Desktop/React-Api-Reckon/react-api-reckon/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carlmatheson/Desktop/React-Api-Reckon/react-api-reckon/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/carlmatheson/Desktop/React-Api-Reckon/react-api-reckon/src/App.js\";\nimport React, { Component } from 'react';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      range: [],\n      divisor: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://join.reckon.com/test1/rangeInfo').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n\n        _this2.setState({\n          range: json,\n          isLoaded: true\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n      fetch('https://join.reckon.com/test1/divisorInfo').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log(json);\n\n        _this2.setState({\n          divisor: json.outputDetails,\n          isLoaded: true\n        });\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Loading....\");\n      } else {\n        // For all numbers inclusive of the lower and upper bound, \n        // go through and check if it divisible by each of the divisors provided in Endpoint2\n        // If the number is wholly divisible , log the output as a result.\n        // If multiple outputs are satisfied, print outputs that are satisfied.\n        //iterate from 0-100 checking if each number is divisible by the divisor\n        //e.g. 3 is divisible by the divisor of 3\n        //while number is between 0 & 100, count++, start at 0\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, this.state.range.lower, this.state.range.upper)), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, this.state.divisor.map(function (item, key) {\n          var Number = 0;\n\n          while (function (Number) {\n            return _this3.state.range.lower && Number <= _this3.state.range.upper;\n          }) {\n            Number++;\n\n            if (Number % item.divisor == 0) {\n              //is divisible\n              return React.createElement(\"li\", {\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76\n                },\n                __self: this\n              }, item.output);\n            }\n          }\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/carlmatheson/Desktop/React-Api-Reckon/react-api-reckon/src/App.js"],"names":["React","Component","App","props","state","range","divisor","isLoaded","fetch","then","res","json","console","log","setState","catch","error","outputDetails","lower","upper","map","item","key","Number","output"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFgB;AAOjB;;;;wCAEkB;AAAA;;AACjBC,MAAAA,KAAK,CAAC,yCAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAEM,IADK;AAEZJ,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OARD,EASCQ,KATD,CASO,UAACC,KAAD,EAAW;AAChBJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,OAXD;AAaAR,MAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACZR,UAAAA,OAAO,EAAEK,IAAI,CAACM,aADF;AAEZV,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OARD,EASCQ,KATD,CASO,UAACC,KAAD,EAAW;AAChBJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,OAXD;AAYD;;;6BAEO;AAAA;;AAEN,UAAG,CAAC,KAAKZ,KAAL,CAAWG,QAAf,EAAyB;AACvB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACD,OAFD,MAIK;AAEH;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,eACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKH,KAAL,CAAWC,KAAX,CAAiBa,KADpB,EAEG,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,KAFpB,CADF,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKf,KAAL,CAAWE,OAAX,CAAmBc,GAAnB,CAAuB,UAACC,IAAD,EAAOC,GAAP,EAAc;AAErC,cAAIC,MAAM,GAAG,CAAb;;AACA,iBAAM,UAAAA,MAAM;AAAA,mBAAI,MAAI,CAACnB,KAAL,CAAWC,KAAX,CAAiBa,KAAjB,IAA0BK,MAAM,IAAI,MAAI,CAACnB,KAAL,CAAWC,KAAX,CAAiBc,KAAzD;AAAA,WAAZ,EAA2E;AACzEI,YAAAA,MAAM;;AACN,gBAAGA,MAAM,GAAGF,IAAI,CAACf,OAAd,IAAyB,CAA5B,EAA8B;AAAE;AAC/B,qBAAO;AAAI,gBAAA,GAAG,EAAEgB,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeD,IAAI,CAACG,MAApB,CAAP;AACA;AACF;AACD,SATA,CADH,CATF,CADF;AAwBD;AACF;;;;EAjFevB,S;;AAoFlB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      range: [],\n      divisor: [],\n      isLoaded: false\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://join.reckon.com/test1/rangeInfo')\n    .then(res => res.json())\n    .then(json => {\n      console.log(json);\n      this.setState({\n        range: json,\n        isLoaded: true\n      })\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n    fetch('https://join.reckon.com/test1/divisorInfo')\n    .then(res => res.json())\n    .then(json => {\n      console.log(json);      \n      this.setState({\n        divisor: json.outputDetails,\n        isLoaded: true\n      })\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  }\n\n  render(){\n\n    if(!this.state.isLoaded) {\n      return <div>Loading....</div>\n    }\n\n    else {         \n\n      // For all numbers inclusive of the lower and upper bound, \n      // go through and check if it divisible by each of the divisors provided in Endpoint2\n      // If the number is wholly divisible , log the output as a result.\n      // If multiple outputs are satisfied, print outputs that are satisfied.\n\n      //iterate from 0-100 checking if each number is divisible by the divisor\n      //e.g. 3 is divisible by the divisor of 3\n      //while number is between 0 & 100, count++, start at 0\n\n      return (\n        <div className=\"App\">\n\n          <ul>\n            <li>\n              {this.state.range.lower}\n              {this.state.range.upper}\n            </li>\n          </ul>\n\n          <ul>\n            {this.state.divisor.map((item, key)=> {\n\n             var Number = 0;\n             while(Number => this.state.range.lower && Number <= this.state.range.upper){\n               Number++;\n               if(Number % item.divisor == 0){ //is divisible\n                return <li key={key}>{item.output}</li>\n               }\n             }\n            })}\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}